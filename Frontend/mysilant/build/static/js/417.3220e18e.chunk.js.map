{"version":3,"file":"static/js/417.3220e18e.chunk.js","mappings":"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","sources":["webpack://mysilant/./src/components/Main/Main.module.scss?cfe2","components/Main/Main.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Main_main__F2ek1\",\"btn_createmachine\":\"Main_btn_createmachine__bnBf2\"};","import React, { useState, useEffect, Suspense } from 'react';\nimport styles from './Main.module.scss';\n\n\nconst Manage = React.lazy(() => import('./Manage/Manage'));\nconst MachineCreate = React.lazy(() => import('./Manage/MachineCreate/MachineCreate'));\nconst MachineList = React.lazy(() => import('./MachineList/MachineList'));\nconst AllTO = React.lazy(() => import('./Manage/AllTO/AllTO'));\nconst AllComplaints = React.lazy(() => import('./Manage/AllComplaints/AllComplaints'));\nconst AllUsers = React.lazy(() => import('./Manage/AllUsers/AllUsers'));\nconst Directories = React.lazy(() => import('./Manage/Directories/Directories'));\n\nexport default function Main(props) {\n\n  const [directory, setDirectory] = useState([])\n  const [users, setUsers] = useState({})\n  const [page, setPage] = useState('list')\n  const [updateList, setUpdateList] = useState(0)\n  const [updateDir, setUpdateDir] = useState(0)\n  const [filters, setFilters] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [fetchError, setFetchError] = useState('')\n  const [machines, setMachines] = useState([])\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\n        `http://localhost:8000/api/machines/${filters}`,\n        {\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8',\n            },\n            credentials: 'include',\n          }\n    )\n    .then(response => {\n        if (response.ok) {\n            return response.json()\n        } else {\n            throw Error(`${response.status} ${response.statusText}`)\n        }\n    })\n    .then(resp => {\n        setMachines(resp);\n        setFetchError('');\n        setLoading(false);\n    })\n    .catch(error => {\n      setFetchError(`Произошла ошибка. ${error}`);\n      console.log(error);\n      setLoading(false);\n    });\n  }, [filters, updateList]);\n    \n  useEffect(() => {\n    fetch(\n        'http://localhost:8000/api/directory/',\n        {\n            headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n          },\n          credentials: 'include',\n        }\n    )\n    .then(response => {\n        if (response.ok) {\n            return response.json()\n        } else {\n            throw Error(`${response.status} ${response.statusText}`)\n        }\n    })\n    .then(resp => {\n        setDirectory(resp);\n    });\n  }, [updateDir]);\n\n  useEffect(() => {\n    fetch('http://localhost:8000/api/users',\n        {\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8',\n            },\n            credentials: 'include',\n        }\n    )\n    .then(response => {\n        if (response.ok) {\n            return response.json()\n        } else {\n            throw Error(`${response.status} ${response.statusText}`)\n        }\n    })\n    .then(resp => {\n        setUsers(resp)\n    });\n  }, []);\n    \n  \n  return (\n    <div className={styles.main}>\n        {props.userGroup === 'Менеджер' || props.userGroup === 'Сервисная организация' ?\n          <Suspense>\n            <Manage userGroup={props.userGroup} setPage={setPage} page={page}/>\n          </Suspense>\n        : null }\n\n        {props.userGroup === 'Менеджер' && page === 'list' ?\n                <button className={styles.btn_createmachine} onClick={() => setPage('machine_create')}>+ Добавить машину</button>\n            : null}\n\n        {page === 'machine_create' ?\n            <Suspense>\n                <MachineCreate\n                directory={directory}\n                userGroup={props.userGroup}\n                users={users}\n                page={page}\n                setPage={setPage}/>\n            </Suspense>\n        :null }\n        {page === 'list' ?  \n          <Suspense>\n            <MachineList setPage={setPage}\n            directory={directory}\n            userGroup={props.userGroup}\n            users={users}\n            setUpdateList={setUpdateList}\n            setFilters={setFilters}\n            loading={loading}\n            updateList={updateList}\n            setFetchError={setFetchError}\n            fetchError={fetchError}\n            machines={machines}\n            setMachines={setMachines}/>\n          </Suspense>\n        : null}\n        {page === 'tos' ?  \n          <Suspense>\n            <AllTO setPage={setPage}\n            directory={directory}\n            userGroup={props.userGroup}\n            users={users}\n            machines={machines}/>\n          </Suspense>\n        : null}\n        {page === 'complaints' ?  \n          <Suspense>\n            <AllComplaints setPage={setPage}\n            directory={directory}\n            userGroup={props.userGroup}\n            users={users}\n            machines={machines}/>\n          </Suspense>\n        : null}\n        {page === 'users' ?  \n          <Suspense>\n            <AllUsers setPage={setPage}\n            directory={directory}\n            userGroup={props.userGroup}\n            users={users}\n            machines={machines}/>\n          </Suspense>\n        : null}\n        \n        {page === 'directories' ?  \n          <Suspense>\n            <Directories setPage={setPage}\n            directory={directory}\n            userGroup={props.userGroup}\n            updateDir={updateDir}\n            setUpdateDir={setUpdateDir}/>\n          </Suspense>\n        : null}\n        \n    </div>\n  )\n}\n"],"names":["Manage","React","MachineCreate","MachineList","AllTO","AllComplaints","AllUsers","Directories","Main","props","useState","directory","setDirectory","users","setUsers","page","setPage","updateList","setUpdateList","updateDir","setUpdateDir","filters","setFilters","loading","setLoading","fetchError","setFetchError","machines","setMachines","useEffect","fetch","headers","credentials","then","response","ok","json","Error","status","statusText","resp","catch","error","console","log","className","styles","userGroup","Suspense","onClick"],"sourceRoot":""}